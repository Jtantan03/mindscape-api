{
  "name": "sample",
  "version": "1.0.0",
  "description": "",
  "main": "app.js",
  "type": "module",
  


  "scripts": {
    "dev": "nodemon app.js",
    "start": "node app.js",
    "test": "echo \"Error: no test specified\" && exit 1"
  
  },
  "keywords": [],
  "author": "",
  "license": "ISC",
  "dependencies": {
    "express": "^4.18.2",
    "jsonwebtoken": "^9.0.0",
    "pg": "^8.8.0"
  },
  "devDependencies": {
    "nodemon": "^2.0.20"
  }
}



// APPS JS

import express from 'express'
import pg from 'pg'


 
const app = express()
const PORT = 3000

const pool = new pg.Pool ({
    host: 'localhost',
    port: 5432,
    database: 'capstone',  //name of the database //
    username: 'john',
    password: 'admin'
})

import { createUserRouter } from './routes/users.js'
import { createPageRouter } from './routes/pages.js'
import { createCategoryRouter } from './routes/categories.js'

app.use('/users', createUserRouter(pool))
app.use('/pages', createPageRouter(pool))
app.use('/categories', createCategoryRouter(pool))



app.listen(PORT, ()=>{
    console.log('Server started at http://localhost:3000')
})

// USERS

import { Router } from 'express'

export function createUserRouter() {
const router = Router()

router.post('', async(req, res) => {
    const data = req.body

    if (!data.username || !data.password || !data.firstName || !data.lastName || !data.age || !data.gender || !data.address) {
        return res.status(402).json({err: 'Missing data'})
    }

    await pool.query(`
        INSERT INTO public.users (username, password, first_name, last_name, age, gender, address)
        VALUES ($1, $2, $3, $4, $5, $6, $7)
        `, [data.username, data.password, data.firstName, data.lastName, data.age, data.gender, data.address])
   
      res.json({ message: 'Successfully registered'})  
    }) 


return router
}


// PAGES
import {Router} from 'express'

export function createPageRouter(pool) {
    const router = Router()

    router.post('', async (req, res)=>{
        const userId = 8460
        const id = Math.round(math.random() *10000)
        const data = req.body
        if (!data.story || !data.pictures || data.private == undefined){
            res.status(400).json({err:'missing data' })
        }
        await pool.query(`
            INSERT INTO public.pages (id, date, title, story, pictures, user_id, private, category_id)
            VALUES ($1, $2, $3, $4, $5, $6, $7, $8)
            `, [id, new Date(), data.title, data.story, data.pictures, userid, data.private, data.catI])
    res.json({ message: 'Page added successfully'})
            
    })
    router.get('', async (req, res) =>{
        const result = await pool.query('SELECT * FROM public.pages WHERE user_id =$1', [8460])
        res.json ({data: result.rows})
    })
    return router

}


// CATEGORY 

import { Router } from 'express'
// import { reset } from 'nodemon'


export function createCategoryRouter(pool) {
    const router = Router()

    router.post('', async (req, res)=>{
        const userId = 8460
        const id = Math.round(Math.random() * 1000)
        const {name} = req.body

        if (!name) {
            reset.status(400).json({ err: 'missing data! '})
        }

        await pool.query(`
        INSERT INTO public.categories (id, user_id,  category_name)
        VALUES ($1, $2, $3)
        `, [id, userId, name])
        
    res.json({ message: 'Category added successfully!'})


    })
    return router
}